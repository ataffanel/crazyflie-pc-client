#!/usr/bin/env python

from __future__ import absolute_import

APP_NAME = "cfclient"

def init_config_path(isInSource):
    import sys
    import os
    import os.path as _path
    from os.path import expanduser

    if isInSource:
        configPath = _path.join(sys.path[0], "..", "conf")
    else:
        prefix = expanduser("~")

        if sys.platform == "linux2":
            configPath = _path.join(prefix, ".local", APP_NAME)
        elif sys.platform == "win32":
            configPath = _path.join(prefix, "Application Data", APP_NAME)
        else:
            #Unknown OS, I hope this is good enough
            configPath = _path.join(prefix, "."+APP_NAME)

    if not _path.exists(configPath): os.makedirs(configPath)

    return configPath

def init_paths():
	"""Make the app work in the source tree.
	   This puts the root module folder in path[0] and the config folder in
	   path[1]"""
	import sys
	import os.path as _path

	sys.path = ["",""] + sys.path

	prefix = _path.normpath(_path.join(_path.dirname(_path.realpath(__file__)), '..'))
	src_lib = _path.join(prefix, 'lib')
	share_lib = prefix
	inSource = False
	for location in [src_lib, share_lib] + sys.path:
		print location
		main_ui = _path.join(location, 'cfclient', 'ui','main.ui')
		if _path.exists(main_ui):
			print location
			sys.path[0] = location
			if location == src_lib:
				inSource = True
			break

	if sys.path[0] == "":
		raise Exception("Cannot find cfclient install folder!")

	sys.path[1] = init_config_path(inSource)
	print "Info: Using config path: ", sys.path[1]


if __name__ == '__main__':
	init_paths()
	import sys
	print sys.path
	import cfclient
	cfclient.main()
